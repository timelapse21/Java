import java.awt.BorderLayout;
import java.awt.GridLayout;
import java.awt.Image;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import javax.imageio.ImageIO;
import javax.swing.JButton;
import javax.swing.JFormattedTextField;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;

public class Base {
	static final int W = 300;
	static final int H = 300;
	static final int X = 100;
	static final int Y = 100;
	
	static JFrame main_window;
	
	static Listener listener;
	
	static JPanel main_panel;
	static JPanel button_panel;
	static JPanel field_panel;
	
	public static JButton calc_button = new JButton("Calculate");
	public static JButton exit_button = new JButton("Exit");
	public static JFormattedTextField x_field = new JFormattedTextField("X Value");
	public static JFormattedTextField y_field = new JFormattedTextField("Y Value");
	public static JLabel result_label = new JLabel("No Input Yet");
	
	static BorderLayout main_layout = new BorderLayout();
	static GridLayout button_layout = new GridLayout(2, 1);
	static GridLayout field_layout = new GridLayout(2, 1);
	
	
	public static void init() {
		main_window = new JFrame("Pythagorean Theorum");
		main_window.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		List<Image> icons = new ArrayList<Image>();
		try {
		icons.add(ImageIO.read(new File("image/64x64.png")));
		icons.add(ImageIO.read(new File("image/32x32.png")));
		icons.add(ImageIO.read(new File("image/16x16.png")));
		icons.add(ImageIO.read(new File("image/8x8.png")));
		}
		catch (IOException e) {
			e.printStackTrace();
		}
		main_window.setIconImages(icons);
		main_window.setBounds(X, Y, W, H);
		main_window.setResizable(false);
		main_window.setVisible(true);
		listener = new Listener();
	}
	
	public static void addComponents() {
		button_layout.addLayoutComponent("calc_button", calc_button);
		button_layout.addLayoutComponent("exit_button", exit_button);
		field_layout.addLayoutComponent("x_field", x_field);
		field_layout.addLayoutComponent("y_field", y_field);
		main_layout.addLayoutComponent(field_panel, BorderLayout.NORTH);
		main_layout.addLayoutComponent(result_label, BorderLayout.CENTER);
	}
	
}
