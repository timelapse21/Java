import java.awt.BorderLayout;
import java.awt.Font;
import java.awt.GridLayout;

import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;

public class Base {
	static final int W = 300;
	static final int H = 600;
	static final int X = 100;
	static final int Y = 100;
	
	static JFrame frame;
	
	static Font default_font;
	static Font default_bold_font;
	
	static Listener listener = new Listener();;
	
	static JPanel main_panel = new JPanel(new BorderLayout());
	static JPanel field_panel = new JPanel(new GridLayout(2, 1));
	static JPanel output_panel = new JPanel(new GridLayout(6, 2));
	
	public static JButton exit_button = new JButton("Exit");
	
	public static JTextField cash_field = new JTextField();
	
	public static JLabel penny_label = new JLabel("   0", JLabel.LEFT);	
	public static JLabel nickel_label = new JLabel("   0", JLabel.LEFT);	
	public static JLabel dime_label = new JLabel("   0", JLabel.LEFT);	
	public static JLabel quarter_label = new JLabel("   0", JLabel.LEFT);	
	public static JLabel loonie_label = new JLabel("   0", JLabel.LEFT);	
	public static JLabel toonie_label = new JLabel("   0", JLabel.LEFT);	
	
	static JLabel cash_field_label = new JLabel("Enter Amount of Cash ($)", JLabel.CENTER);
	
	static ImageIcon penny_icon = new ImageIcon("image/penny.png");
	static ImageIcon nickel_icon = new ImageIcon("image/nickel.png");
	static ImageIcon dime_icon = new ImageIcon("image/dime.png");
	static ImageIcon quarter_icon = new ImageIcon("image/quarter.png");
	static ImageIcon loonie_icon = new ImageIcon("image/loonie.png");
	static ImageIcon toonie_icon = new ImageIcon("image/toonie.png");
	
	static JLabel penny_icon_label = new JLabel(penny_icon, JLabel.RIGHT);
	static JLabel nickel_icon_label = new JLabel(nickel_icon, JLabel.RIGHT);
	static JLabel dime_icon_label = new JLabel(dime_icon, JLabel.RIGHT);
	static JLabel quarter_icon_label = new JLabel(quarter_icon, JLabel.RIGHT);
	static JLabel loonie_icon_label = new JLabel(loonie_icon, JLabel.RIGHT);
	static JLabel toonie_icon_label = new JLabel(toonie_icon, JLabel.RIGHT);
	
	public static void init() {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (ClassNotFoundException | InstantiationException | IllegalAccessException
				| UnsupportedLookAndFeelException e1) {
			e1.printStackTrace();
		}
		frame = new JFrame("Change Calculator");
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frame.setBounds(X, Y, W, H);
		output_panel.setFont(default_bold_font);
		addComponents();
		frame.setVisible(true);
		
	}
	
	public static void addComponents() {
		default_font = cash_field.getFont();
		default_bold_font = new Font(default_font.getFamily(), Font.BOLD | Font.ITALIC, default_font.getSize());
		
		penny_icon_label.setToolTipText("I am having an existential crisis");
		
		cash_field.setHorizontalAlignment(JLabel.CENTER);
		
		field_panel.add(cash_field);
		field_panel.add(cash_field_label);
		
		
		output_panel.add(penny_icon_label);
		output_panel.add(penny_label);
		output_panel.add(nickel_icon_label);
		output_panel.add(nickel_label);
		output_panel.add(dime_icon_label);
		output_panel.add(dime_label);
		output_panel.add(quarter_icon_label);
		output_panel.add(quarter_label);
		output_panel.add(loonie_icon_label);
		output_panel.add(loonie_label);
		output_panel.add(toonie_icon_label);
		output_panel.add(toonie_label);
		
		main_panel.add(field_panel, BorderLayout.NORTH);
		main_panel.add(exit_button, BorderLayout.SOUTH);
		main_panel.add(output_panel, BorderLayout.CENTER);
		
		frame.setContentPane(main_panel);
		
		exit_button.addActionListener(listener);
		cash_field.getDocument().addDocumentListener(listener);
	}
	
	public static void updateOutput() {
		long cents = 0;
		cash_field.setText(cash_field.getText().substring(0, cash_field.getText().length() - 1));
		try {
			String input = cash_field.getText();
			if (input.equals("")) {
				cents = 0;
			}
			else {
				while (input.contains("$") || input.contains(" ")) {
					input = input.replace("$", "");
					input = input.replace(" ", "");
				}
				cents = (long) Math.round(Double.parseDouble(input) * 100);
			}
		}
		catch (Exception exception){
			
			JOptionPane.showMessageDialog(Base.frame, "Please enter a valid input.");
		}
		
		long toonies = (long) (cents / 200);
		cents -= toonies * 200;
		long loonies = (long) (cents / 100);
		cents -= loonies * 100;
		long quarters = (long) (cents / 25);
		cents -= quarters * 25;
		long dimes = (long) (cents / 10);
		cents -= dimes * 10;
		long nickels = (long) (cents / 5);
		cents -= nickels * 5;
		long pennies = (long) (cents / 1);
		cents -= pennies;
		
		penny_label.setFont(pennies > 0 ? default_bold_font : default_font);
		nickel_label.setFont(nickels > 0 ? default_bold_font : default_font);
		dime_label.setFont(dimes > 0 ? default_bold_font : default_font);
		quarter_label.setFont(quarters > 0 ? default_bold_font : default_font);
		loonie_label.setFont(loonies > 0 ? default_bold_font : default_font);
		toonie_label.setFont(toonies > 0 ? default_bold_font : default_font);
		
		penny_label.setText("   " + Long.toString(pennies));
		nickel_label.setText("   " + Long.toString(nickels));
		dime_label.setText("   " + Long.toString(dimes));
		quarter_label.setText("   " + Long.toString(quarters));
		loonie_label.setText("   " + Long.toString(loonies));
		toonie_label.setText("   " + Long.toString(toonies));
	}
	
}
